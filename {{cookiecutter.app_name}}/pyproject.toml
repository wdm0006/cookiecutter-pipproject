[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "{{cookiecutter.app_name}}"
version = "{{cookiecutter.version}}"
authors = [
    { name = "{{cookiecutter.full_name}}", email = "{{cookiecutter.email}}" }
]
description = "{{cookiecutter.project_short_description}}"
readme = "README.md"
license = { file = "LICENSE.md" }
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.8"
dependencies = []

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.3.0",
    "mypy>=1.0.0",
    "tox>=4.0.0",
    "build>=1.0.0",
    "twine>=4.0.0",
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=2.0.0",
]

[tool.ruff]
target-version = "py38"
line-length = 120
fix = true
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "D",   # pydocstyle
]
ignore = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.isort]
known-first-party = ["{{cookiecutter.app_name}}"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true

[tool.pytest.ini_options]
addopts = "-ra -q --cov={{cookiecutter.app_name}} --cov-report=term-missing"
testpaths = ["tests"]

[tool.tox]
legacy_tox_ini = """
[tox]
min_version = 4.0
env_list = 
    py38
    py39
    py310
    py311
    py312
    lint
    type
isolated_build = True

[testenv]
deps = .[dev]
commands = pytest {posargs:tests}

[testenv:lint]
deps = .[dev]
commands = 
    ruff check .
    ruff format --check .

[testenv:type]
deps = .[dev]
commands = mypy {{cookiecutter.app_name}}
""" 